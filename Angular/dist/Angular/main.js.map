{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/create_game/create.game.component.css","webpack:///./src/create_game/create.game.component.html","webpack:///./src/create_game/create.game.component.ts","webpack:///./src/create_game/create.game.service.ts","webpack:///./src/create_game/inner.game.model.for.server.ts","webpack:///./src/create_game/inner.game.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/game/game.component.css","webpack:///./src/game/game.component.html","webpack:///./src/game/game.component.ts","webpack:///./src/game/game.service.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component} from '@angular/core';\n  \n@Component({\n    selector: 'app-root',\n    template: `<div>\n                    <router-outlet></router-outlet>\n               </div>`\n})\nexport class AppComponent {}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router'\nimport { AppComponent } from './app.component';\nimport {CreateGameComponent} from '../create_game/create.game.component'\nimport { routing } from './app.routing';\nimport {HttpClientModule} from '@angular/common/http';\nimport {GameComponent} from '../game/game.component'\n\n\n@NgModule({\n  exports:[RouterModule],\n  declarations: [\n    AppComponent,\n    CreateGameComponent,\n    GameComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    [routing]\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CreateGameComponent} from '../create_game/create.game.component';\r\nimport { GameComponent } from '../game/game.component';\r\n\r\nconst routes:Routes=[\r\n    {path:\"\", component: CreateGameComponent},\r\n    {path:\"game/:id\", component:GameComponent}\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);","module.exports = \"body, html {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    margin: 1px;\\r\\n}\\r\\n\\r\\n.img-block {\\r\\n    margin: auto;\\r\\n    position: absolute;\\r\\n    background-image: url(\\\"/Content/Images/blackjack-table.svg\\\");\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n    left: 200px;\\r\\n    right: 200px;\\r\\n}\\r\\n\"","module.exports = \"<base href=\\\"/\\\"/>\\r\\n<h1>Create Game</h1>\\r\\n<div id=\\\"content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <label class=\\\"control-label\\\" for=\\\"playerName\\\">Your Name: </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"innerGameModel.playerName\\\" class=\\\"form-control\\\" id=\\\"playerName\\\" />\\r\\n            <br />\\r\\n            <label  class=\\\"control-label\\\" for=\\\"dealerName\\\">Dealer Name: </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"innerGameModel.dealerName\\\" id=\\\"dealerName\\\" class=\\\"form-control\\\" />\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-sm-4\\\" id=\\\"bots\\\">\\r\\n            <button (click)=\\\"addBot()\\\" class=\\\"btn-primary btn\\\">Add bot</button>\\r\\n            <button (click)=\\\"deleteBot()\\\" class=\\\"btn-primary btn\\\">Delete bot</button>\\r\\n            <div *ngFor=\\\"let singleItem of innerGameModel.nameOfBots let i = index\\\">\\r\\n                <label>Name of Bot</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{singleItem}}\\\" [(ngModel)]=\\\"singleItem.botName\\\"/>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-primary\\\" style=\\\"position: absolute\\\" id=\\\"sendData\\\" (click)=\\\"save()\\\">Start game</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreateGameService } from './create.game.service';\r\nimport { InnerGameModel } from './inner.game.model';\r\nimport { InnerGameModelForServer } from \"./inner.game.model.for.server\";\r\n\r\n@Component({\r\n    selector: 'creategame',\r\n    templateUrl: './create.game.component.html',\r\n    styleUrls: ['./create.game.component.css'],\r\n    providers: [CreateGameService]\r\n})\r\nexport class CreateGameComponent implements OnInit {\r\n    ngOnInit(): void {\r\n    }\r\n    innerGameModelForServer: InnerGameModelForServer;\r\n    innerGameModel: InnerGameModel;\r\n\r\n    constructor(private createGameService: CreateGameService) {\r\n        this.innerGameModel = new InnerGameModel();\r\n        this.innerGameModelForServer = new InnerGameModelForServer();\r\n    }\r\n\r\n    save(): void {\r\n        //this.innerGameModel.numberOfBots = this.innerGameModel.nameOfBots.length;\r\n        this.innerGameModelForServer.dealerName = this.innerGameModel.dealerName;\r\n        this.innerGameModelForServer.playerName = this.innerGameModel.playerName;\r\n        this.innerGameModelForServer.numberOfBots = this.innerGameModel.numberOfBots;\r\n        for (var i = 0; i < this.innerGameModel.nameOfBots.length; i++) {\r\n            this.innerGameModelForServer.nameOfBots.push(this.innerGameModel.nameOfBots[i].botName);\r\n        }\r\n        this.createGameService.createGame(this.innerGameModelForServer);\r\n    }\r\n\r\n    addBot(): void {\r\n        if (this.innerGameModel.numberOfBots <= 4) {\r\n            this.innerGameModel.nameOfBots.push({ botName: \"\" });\r\n            this.innerGameModel.numberOfBots = this.innerGameModel.nameOfBots.length;\r\n        }\r\n\r\n    }\r\n\r\n    deleteBot(): void {\r\n        if (this.innerGameModel.numberOfBots >= 0) {\r\n            this.innerGameModel.nameOfBots.splice(-1);\r\n            this.innerGameModel.numberOfBots = this.innerGameModel.nameOfBots.length;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { InnerGameModelForServer } from \"./inner.game.model.for.server\";\r\n\r\n\r\n@Injectable()\r\nexport class CreateGameService {\r\n    private url = \"http://localhost:64548/api/CreateGame/\";\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    id:number;\r\n    createGame(innerGameModel: InnerGameModelForServer) {\r\n        return this.http.post(this.url, innerGameModel).subscribe((data: any) => {\r\n            this.id = data;\r\n            window.location.replace('game/'+this.id);\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","export class InnerGameModelForServer {\r\n    constructor(\r\n        public id?: number,\r\n        public playerName?: string,\r\n        public numberOfBots?: number,\r\n        public dealerName?: string,\r\n        public nameOfBots: string[]=[]) { }\r\n}","export class InnerGameModel {\r\n    constructor(\r\n        public id?: number,\r\n        public playerName?: string,\r\n        public numberOfBots: number =0,\r\n        public dealerName?: string,\r\n        public nameOfBots: { botName: string }[] = []) { }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","module.exports = \"img {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.cardList {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    height: 120px;\\r\\n    width: 100px;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.cardListEndRound {\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.cards {\\r\\n    height: 100px;\\r\\n    width: auto;\\r\\n    margin-left: -50%;\\r\\n    border: 2px solid black;\\r\\n    border-radius: 10px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.cardsEndRound {\\r\\n    height: 200px;\\r\\n    width: auto;\\r\\n    border: 2px solid black;\\r\\n    border-radius: 10px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n.menu {\\r\\n    width: 70%;\\r\\n    height: 70%;\\r\\n    position: absolute;\\r\\n    top: 15%;\\r\\n    left: 15%;\\r\\n    background-color: cadetblue;\\r\\n    padding: 2%;\\r\\n    z-index: 0;\\r\\n    border-radius: 15px;\\r\\n    border: 2px solid black;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n    z-index: 0;\\r\\n}\\r\\n\\r\\n.menu-buttons {\\r\\n    width: 300px;\\r\\n    height: 90px;\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\n.hide-window {\\r\\n    background: rgba(0,0,0,.6);\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    z-index: 5;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"container\\\" style=\\\"text-align: center\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"dealer-place\\\">\\r\\n            <label *ngIf = \\\"flag\\\">{{dealerModel.name}}</label>\\r\\n            <div class=\\\"cardList\\\">\\r\\n                <img class=\\\"cards\\\" *ngFor = \\\"let card of dealerModel.cards\\\" src=\\\"assets/images/{{card}}.png\\\"/>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n            <label *ngIf = \\\"flag\\\">{{playerModel.name}}</label>\\r\\n            <div class=\\\"cardList\\\">\\r\\n                <img class=\\\"cards\\\" *ngFor = \\\"let card of playerModel.cards\\\" src=\\\"assets/images/{{card}}.png\\\"/>\\r\\n            </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngFor=\\\"let bot of botsModel\\\" >\\r\\n                <label *ngIf = \\\"flag\\\">{{bot.name}}</label>\\r\\n                <div class=\\\"cardList\\\">\\r\\n                    <img class=\\\"cards\\\" *ngFor = \\\"let card of bot.cards\\\" src=\\\"assets/images/{{card}}.png\\\"/>\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <img src=\\\"assets/images/blackjack-table.svg\\\"/>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div>\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"One More\\\" id=\\\"one-more\\\" />\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Finish Round\\\" id=\\\"finish-round\\\" />\\r\\n        <!-- <div class=\\\"menu\\\" id=\\\"menu\\\">\\r\\n            <button id=\\\"one-more-round\\\" class=\\\" menu-buttons btn btn-primary\\\">One more round</button>\\r\\n            <button id=\\\"finish-game\\\" class=\\\" menu-buttons btn btn-primary\\\">Finish Game</button>\\r\\n        </div> -->\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { GameModel } from \"./models/game.model\";\r\nimport { RoundModel } from \"./models/round.model\";\r\nimport { GameService } from \"./game.service\";\r\nimport { ActivatedRoute } from \"@angular/router\"\r\nimport { UserModel } from \"./models/user.model\";\r\n\r\n@\r\n    Component({\r\n        selector: \"game\",\r\n        templateUrl: './game.component.html',\r\n        styleUrls: [\"./game.component.css\"],\r\n        providers: [GameService]\r\n    })\r\nexport class GameComponent implements OnInit {\r\n    id: number;\r\n    roundId: number;\r\n    flag:boolean = false;\r\n    playerModel:UserModel;\r\n    dealerModel:UserModel;\r\n    botsModel:UserModel[];\r\n\r\n    constructor(private activatedRoute: ActivatedRoute, private gameService: GameService) {\r\n        this.id = this.activatedRoute.snapshot.params['id'];\r\n    }\r\n    ngOnInit(): void {\r\n        this.gameService.createRound(this.id).subscribe(data=>{\r\n            this.roundId = data;\r\n        });\r\n        this.gameService.getPlayer(this.id, this.roundId).subscribe(data=>{\r\n            this.playerModel = data;\r\n        })\r\n        this.gameService.getDealer(this.id, this.roundId).subscribe(data=>{\r\n            this.dealerModel = data;\r\n        })\r\n        this.gameService.getBots(this.id, this.roundId).subscribe(data=>{\r\n            this.botsModel = data;\r\n        })\r\n        this.flag=true;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient} from '@angular/common/http';\r\nimport {UserModel} from './models/user.model';\r\nimport {RoundModel} from \"./models/round.model\"\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class GameService {\r\n    private url = 'http://localhost:64548/api/Game';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    getPlayer(gameId:number, roundId:number):Observable<UserModel>{\r\n        return this.http.get(this.url+'/GetPlayerCards/'+gameId+'/'+roundId).pipe(map(x=>x as UserModel));\r\n    }\r\n\r\n    getDealer(gameId:number, roundId:number):Observable<UserModel>{\r\n        return this.http.get(this.url+'/GetDealerCards/'+gameId+'/'+roundId).pipe(map(x=>x as UserModel));\r\n    }\r\n\r\n    getBots(gameId:number, roundId:number):Observable<UserModel[]>{\r\n        return this.http.get(this.url+'/GetBotsCards/'+gameId+'/'+roundId).pipe(map(x=>x as UserModel[]));\r\n    }\r\n\r\n    createRound(gameId: number):Observable<number> {\r\n        return this.http.get(this.url + \"/CreateRound/\"+ gameId).pipe(map(x=>x as number));\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}